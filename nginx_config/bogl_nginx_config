#
# NGINX Website Config File
# Intended for: bogl.engr.oregonstate.edu
#
# Created July 16th, 2020
# Benjamin Wilson Friedman
# Intended for use w/ the CSforAll curriculum
#
# Serves the static website over HTTPS
# Proxies requests from the static website to the backend language server over port 5174
#
# Generally, this should be in... (to mark it as an available site)
# /etc/nginx/sites-available/bogl_engr_oregonstate_edu
# And generate a symlink to (to mark it as an enabled site)
# /etc/nginx/sites-enabled/bogl_engr_oregonstate_edu
#

# insecure to secure redirect
server {
	listen 80;
	listen [::]:80;
	server_name bogl.engr.oregonstate.edu;
	return 301 https://$server_name$request_uri;
}


# old port redirect to new port
server {
	listen 5168 ssl;
	listen [::]:5168 ssl;
	server_name bogl.engr.oregonstate.edu;
	ssl_certificate /etc/letsencrypt/live/bogl.engr.oregonstate.edu/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/bogl.engr.oregonstate.edu/privkey.pem;
	return 301 https://bogl.engr.oregonstate.edu:443;
}


# secured port
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name bogl.engr.oregonstate.edu;

	ssl_certificate /etc/letsencrypt/live/bogl.engr.oregonstate.edu/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bogl.engr.oregonstate.edu/privkey.pem;


	root /var/www/html/bogl/editor/;

	index index.html index.htm;

	# error pages
	error_page 404 /404.html;
	error_page 403 /403.html;
	location = /404.html {
		root /var/www/html/errors/;
		internal;
	}
	location = /403.html {
		root /var/www/html/errors/;
		internal;
	}

	# when bogl is offline
	location = /offline.html {
		root /var/www/html/errors;
		internal;
	}

	# location for everything else
	# editor and such
	location / {
		# try to serve as file, then dir, then 404 error
		try_files $uri $uri/ $uri.html offline.html =404;
	}

	#
	# Internal request proxying to the BoGL language server
	#
	location /api_1/test {
		proxy_pass http://localhost:5174/test/;
	}
	location /api_1/share {
		proxy_pass http://localhost:5174/share/;
	}
	location /api_1/load {
		proxy_pass http://localhost:5174/load/;
	}
	location /api_1/runCode {

		# handle preflight CORs requests
		if ($request_method = OPTIONS) {
			# for now, we're allowing all incoming CORs requests
			# this allows the bogl backend to power other frontend applications
			add_header Access-Control-Allow-Origin *;
      add_header Content-Length 0;
			add_header Access-Control-Allow-Methods 'GET, OPTIONS, POST';
      add_header Access-Control-Allow-Headers 'Allow,Content-Type';
			return 204;
    }

		proxy_pass http://localhost:5174/runCode/;
	}

	#
  # BoGL Docs, imgs, assets, tutorials only
  #

	# Should change the 'root' to correspond with actual location

  location /imgs/ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
  location /assets/ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
  location /tutorials/ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
	location /technical/ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
	location /docs/ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
  location ~ ^/(pages.json|robots.txt|sitemap.xml|sw.caches.js)$ {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }
  location ~ ^/search.html? {
          root /var/www/html/bogl/docs;
          try_files $uri $uri/ $uri.html =404;
  }

}
